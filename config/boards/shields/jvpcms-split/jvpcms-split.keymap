#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NUM 1
#define MSE 2
#define BLE 3

#define trml LC(LA(T))

#define U_MOUSE_MOVE_MAX 1400
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_Y(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_Y(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_X(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_X(U_MOUSE_MOVE_MAX)

&mmv {
    time-to-max-speed-ms = <550>;
    acceleration-exponent = <2>;
};

#define U_MOUSE_SCROLL_MAX 200
#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP MOVE_Y(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN MOVE_Y(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT MOVE_X(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT MOVE_X(U_MOUSE_SCROLL_MAX)

&msc {
    time-to-max-speed-ms = <500>;
};

&sl {
    ignore-modifiers;
};

/ {
    behaviors {
        lcht: tap_layer_hold_keypress {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&to>;
        };
        // stick layer and to layer
        td_layer: tap_dance_num_layer {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sl NUM>, <&to NUM>;
        };
        // ( and ) mod
        parnt: open_close_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp RPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // [ and ] mod
        brakt: open_close_bracket {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // { and } mod
        brace: open_close_braces {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp RBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // j and gui+down mod
        jgui: j_and_gui_down {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp LG(DOWN)>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
        // k and gui+up mod
        kgui: k_and_gui_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp LG(UP)>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
        // h and gui+left mod
        hgui: h_and_gui_left {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp LG(LEFT)>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
        // l and gui+right mod
        lgui: l_and_gui_right {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp L>, <&kp LG(RIGHT)>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };
    combos {
        compatible = "zmk,combos";
        // enter key combo
        combo_enter {
            timeout-ms = <50>;
            key-positions = <16 15>;
            bindings = <&kp ENTER>;
        };
        // mouse layer combo
        combo_mouse_layer {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&to MSE>;
        };
        // ble layer combo
        combo_ble_layer {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&to BLE>;
        };
        // middle click combo
        combo_mclk {
            timeout-ms = <50>;
            key-positions = <36 41>;
            bindings = <&mkp MCLK>;
            layers = <MSE>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                // ┌────────┬──────┬──────┬─────────┬─────────┬─────────┐  ┌──────────────┬─────────┬─────────┬───────┬────────┬──────────────┐
                // │        │      │      │         │         │         │  │              │         │         │       │        │              │
                    &kp TAB  &kp Q  &kp W  &kp E     &kp R     &kp T        &kp Y          &kp U     &kp I     &kp O   &kp P    &kp MINUS
                // ├────────┼──────┼──────┼─────────┼─────────┼─────────┤  ├──────────────┼─────────┼─────────┼───────┼────────┼──────────────┤
                // │        │      │      │         │         │         │  │              │         │         │       │        │              │
                    &kp ESC  &kp A  &kp S  &kp D     &kp F     &kp G        &hgui          &jgui     &kgui     &lgui   &kp SEMI &kp SQT
                // ├────────┼──────┼──────┼─────────┼─────────┼─────────┤  ├──────────────┼─────────┼─────────┼───────┼────────┼──────────────┤
                // │        │      │      │         │         │         │  │              │         │         │       │        │              │
                    &kp LGUI &kp Z  &kp X  &kp C     &kp V     &kp B        &kp N          &kp M     &kp COMMA &kp DOT &kp FSLH &mt LALT trml
                // └────────┴──────┴──────┼─────────┼─────────┼─────────┤  ├──────────────┼─────────┼─────────┼───────┴────────┴──────────────┘
                //                        │         │         │         │  │              │         │         │ 
                                           &kp SPACE &kp LSHFT &td_layer    &kp SLCK       &kp RCTRL &kp BSPC
                //                        └─────────┴─────────┴─────────┘  └──────────────┴─────────┴─────────┘ 
            >;
        };
        second_layer {
            bindings = <
                // ┌─────────┬─────────┬───────┬─────────┬─────────┬─────────┐  ┌───────────────┬─────────┬─────────┬─────────┬────────┬──────────────┐
                // │         │         │       │         │         │         │  │               │         │         │         │        │              │
                    &kp TAB   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET       &kp AMPS  &kp ASTRK &parnt    &brakt   &brace  
                // ├─────────┼─────────┼───────┼─────────┼─────────┼─────────┤  ├───────────────┼─────────┼─────────┼─────────┼────────┼──────────────┤
                // │         │         │       │         │         │         │  │               │         │         │         │        │              │
                    &kp ESC   &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &kp N6          &kp N7    &kp N8    &kp N9    &kp N0   &kp BSLH
                // ├─────────┼─────────┼───────┼─────────┼─────────┼─────────┤  ├───────────────┼─────────┼─────────┼─────────┼────────┼──────────────┤
                // │         │         │       │         │         │         │  │               │         │         │         │        │              │
                    &kp LGUI  &trans    &trans  &trans    &trans    &trans       &kp PLUS        &kp EQUAL &kp TILDE &kp GRAVE &trans   &mt LALT trml 
                // └─────────┴─────────┴───────┼─────────┼─────────┼─────────┤  ├───────────────┼─────────┼─────────┼─────────┴────────┴──────────────┘
                //                             │         │         │         │  │               │         │         │
                                                &kp SPACE &kp LSHFT &td_layer    &to DEF         &kp RCTRL &kp BSPC  
                //                             └─────────┴─────────┴─────────┘  └───────────────┴─────────┴─────────┘
            >;
        };
        third_layer {
            bindings = <
                // ┌────────┬───────┬──────────────┬──────────────┬───────────────┬──────────────┐  ┌───────────────┬────────────┬────────────┬────────────┬─────────┬──────────────┐ 
                // │        │       │              │              │               │              │  │               │            │            │            │         │              │ 
                    &kp TAB  &trans  &trans         &mmv MOVE_UP   &trans          &msc SCRL_UP      &kp K_VOL_DN    &kp K_VOL_UP &kp C_BRI_DN &kp C_BRI_UP &kp PSCRN &trans    
                // ├────────┼───────┼──────────────┼──────────────┼───────────────┼──────────────┤  ├───────────────┼────────────┼────────────┼────────────┼─────────┼──────────────┤ 
                // │        │       │              │              │               │              │  │               │            │            │            │         │              │ 
                    &kp ESC  &trans  &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &msc SCRL_DOWN    &kp LEFT        &kp DOWN     &kp UP       &kp RIGHT    &trans    &trans 
                // ├────────┼───────┼──────────────┼──────────────┼───────────────┼──────────────┤  ├───────────────┼────────────┼────────────┼────────────┼─────────┼──────────────┤ 
                // │        │       │              │              │               │              │  │               │            │            │            │         │              │
                    &kp LGUI &trans  &trans         &trans         &trans          &trans            &kp HOME        &kp PG_DN    &kp PG_UP    &kp END      &trans    &mt LALT trml 
                // └────────┴───────┴──────────────┼──────────────┼───────────────┼──────────────┤  ├───────────────┼────────────┼────────────┼────────────┴─────────┴──────────────┘
                //                                 │              │               │              │  │               │            │            │
                                                    &mkp LCLK      &kp LSHFT       &td_layer         &to DEF         &kp RCTRL    &mkp RCLK 
                //                                 └──────────────┴───────────────┴──────────────┘  └───────────────┴────────────┴────────────┘
            >;
        };
        ble_layer {
            bindings = <
                // ┌────────┬────────┬────────┬────────┬─────────────┬──────────┐  ┌────────┬──────────┬───────┬───────┬───────┬───────┐ 
                // │        │        │        │        │             │          │  │        │          │       │       │       │       │ 
                    &trans   &trans   &trans   &trans   &bt BT_SEL 2  &trans        &trans   &bt BT_NXT &trans  &trans  &trans  &trans  
                // ├────────┼────────┼────────┼────────┼─────────────┼──────────┤  ├────────┼──────────┼───────┼───────┼───────┼───────┤ 
                // │        │        │        │        │             │          │  │        │          │       │       │       │       │ 
                    &trans   &trans   &trans   &trans   &bt BT_SEL 1  &trans        &trans   &bt BT_CLR &trans  &trans  &trans  &trans  
                // ├────────┼────────┼────────┼────────┼─────────────┼──────────┤  ├────────┼──────────┼───────┼───────┼───────┼───────┤ 
                // │        │        │        │        │             │          │  │        │          │       │       │       │       │
                    &trans   &trans   &trans   &trans   &bt BT_SEL 0  &trans        &trans   &trans     &trans  &trans  &trans  &trans       
                // └────────┴────────┴────────┼────────┼─────────────┼──────────┤  ├────────┼──────────┼───────┼───────┼───────┴───────┘
                //                            │        │             │          │  │        │          │       │
                                               &trans   &trans        &td_layer     &to DEF  &trans     &trans     
                //                            └────────┴─────────────┴──────────┘  └────────┴──────────┴───────┘
            >;
        };
    };
};
